
############################# FIRST METHOD #######################


ALGORITHM SUM_OF_DISTINCT_NUM

VAR
ar1 : ARRAY_OF INTEGER[]; 
ar2 : ARRAY_OF INTEGER[]; 
sum1:=0;
sum2:=0;
sum:=0;

BEGIN
    
write('insert ar1 and ar2 :');

read(ar1);

read(ar2);

FOR i FROM 0 TO ar1.length-1 STEP 1  DO
   
    FOR j FROM 0 TO ar2.length-1 STEP 1  DO
    
        IF (ar1[i] = ar2[j]) THEN
            
            break;

        ELSE IF (j=ar2.length-1) THEN //if ar1[i]<>ar2[j] and ar2[j] is the last element
            
            sum1:=sum1+ar1[i];

        END_IF


    END_FOR
   


END_FOR

FOR i FROM 0 TO ar2.length-1 STEP 1  DO
   
    FOR j FROM 0 TO ar1.length-1 STEP 1  DO
    
        IF (ar2[i] = ar1[j]) THEN
            
            break;

        ELSE IF (j=ar1.length-1) THEN //if ar2[i]<>ar1[j] and ar1[j] is the last element
            
            sum2:=sum2+ar2[i]; 

        END_IF


    END_FOR
   


END_FOR

sum:= sum1 + sum2;

write('the sum of distinct elements is :');

write(sum);


END


############################# HASHING METHOD (2) #######################


ALGORITHM SUM_OF_DISTINCT_NUM

VAR

array_1 : ARRAY_OF INTEGER[];
array_2 : ARRAY_OF INTEGER[];
concat : ARRAY_OF INTEGER[];
count:0;
i:INTEGER;
htab : HASH_TABLE<INTEGER,INTEGER>
sum:0;
sum_dist:0;

BEGIN


// READ THE TWO ARRAYS

READ(array_1);
read(array_2);

// concat the tow arrays in one array 'concat'

FOR i FROM 0 TO array1.length-1 STEP 1  DO

    concat[i] := array1[i];

END_FOR

FOR i FROM array1.length-1 TO (array1.length + array2.length-1)  STEP 1  DO

    concat[i] := array2[i];

END_FOR

//brousing concat and inserting <key,value> in htab

FOR i FROM 0 TO concat.length-1 STEP 1  DO
    
IF (htab.lookup(concat[i] = false)) THEN
    
    htab.insert(concat[i], 1);

ELSE
    
    count := htab.get(concat);

    htab.insert(concat[i], count+1);

END_IF


// looping through htab to find distinct values

FOR i FROM 0 TO concat-1 STEP 1  DO
    IF (htab.get(concat[i])=1) THEN
        
        sum:=sum+ concat[i]

    END_IF  

END_FOR

sum_dist:= sum/2;

write('sum of all distinct elements from the set is :')

write(sum_dist);

END


#################  sum of overlapping elements in two sets ##############################*

ALGORITHM sum_overlapping_elements


VAR

arr1:INTEGER[];
arr2:INTEGER[];
sum1:=INTEGER;
sum:INTEGER;

    
BEGIN

sum1:=0;

sum:=0;
    
FOR i FROM 0 TO arr1.length-1 STEP 1  DO
   
    FOR j FROM 0 TO arr2.length-1 STEP 1  DO
    
        IF (arr1[i] = arr2[j]) THEN
            
            sum1:= sum1 + ar1[i];
            
            break;

        END_IF


    END_FOR


END_FOR

sum:= sum1 * 2;

write('the sum of overlapping elements of the two sets is');

write(sum);


END
















